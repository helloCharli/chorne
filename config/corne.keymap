/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        layout_swap {
            bindings = <&tog 2>;
            key-positions = <37 40>;
            layers = <0 2 1>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0 2 1>;
        };

        number_layer {
            bindings = <&mo 5>;
            key-positions = <15 16>;
            layers = <0>;
        };

        function_layer {
            bindings = <&mo 6>;
            key-positions = <1 2>;
            layers = <0 1 2>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <21 22>;
            layers = <0>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <20 21>;
            layers = <0>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <19 21 22>;
            layers = <0>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 20 21>;
            layers = <0>;
        };

        apostrophe {
            bindings = <&kp APOSTROPHE>;
            key-positions = <8 21>;
            layers = <0>;
        };

        quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <7 21>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <30 31>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <18 19>;
            layers = <0>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <6 7>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <18 19 20>;
            layers = <0>;
        };

        forward_slash {
            bindings = <&kp SLASH>;
            key-positions = <31 20 9>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <7 20 33>;
            layers = <0>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <19 8 21>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <19 10>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <6 19>;
            layers = <0>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <7 33>;
            layers = <0>;
        };
    };

    macros {
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        windows {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
         &kp TAB  &kp Q  &kp W         &kp E  &kp R      &kp T      &kp Y  &kp U          &kp I    &kp O     &kp P  &kp BSPC
  &kp LEFT_SHIFT  &kp A  &kp S         &kp D  &kp F      &kp G      &kp H  &kp J          &kp K    &kp L  &kp SEMI   &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X         &kp C  &kp V      &kp B      &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                                &kp LEFT_ALT  &mo 3  &kp SPACE    &kp RET  &mo 4  &kp RIGHT_GUI
            >;
        };

        mac {
            bindings = <
          &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
          &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_COMMAND  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans  &trans  &trans    &trans  &trans   &none
            >;
        };

        colemack_dh {
            bindings = <
&trans  &kp Q  &kp W   &kp F   &kp P   &kp B     &kp J   &kp L      &kp U    &kp Y  &kp SEMI   &trans
&trans  &kp A  &kp R   &kp S   &kp T   &kp G     &kp M   &kp N      &kp E    &kp I     &kp O  &kp SQT
&trans  &kp Z  &kp X   &kp C   &kp D   &kp V     &kp K   &kp H  &kp COMMA  &kp DOT  &kp FSLH   &trans
                      &trans  &trans  &trans    &trans  &trans     &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp NUMBER_3  &kp N2  &kp NUMBER_1  &trans  &trans    &trans    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans
&trans        &trans  &trans        &trans  &trans  &trans    &trans  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans
&trans        &trans  &trans        &trans  &trans  &trans    &trans        &trans        &trans        &trans  &trans  &trans
                                    &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET              &kp AMPS        &kp KP_MULTIPLY      &kp LESS_THAN  &kp GREATER_THAN  &trans
&trans    &trans  &trans    &trans    &trans     &trans    &kp GRAVE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp LEFT_BRACKET            &trans  &trans
&trans    &trans  &trans    &trans    &trans     &trans    &kp TILDE        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp RIGHT_BRACKET          &kp PIPE  &trans
                            &trans    &trans     &trans       &trans                &trans                 &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans  &trans
                        &trans  &trans  &trans    &trans  &kp NUMBER_0        &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1   &kp F2   &kp F3   &kp F4  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5   &kp F6   &kp F7   &kp F8  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans   &trans
            >;
        };
    };
};
